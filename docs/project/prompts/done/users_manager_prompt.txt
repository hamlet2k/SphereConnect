Prompt for Kilo Code (grok-code-fast-1):

Add users manager UI for SphereConnect MVP. Align with FastAPI backend, React frontend, v21 spec (User persona, guild-only monetization). Add to AdminDashboard.tsx (Users tab). Include assign rank (from GET /api/admin/ranks), access overrides (POST /api/admin/user_access). Do not modify node_modules.

1. **Frontend**:
   - Path: frontend/src/components/UsersManager.tsx (new)
   - Features: Table (Name, Username, Email, Rank, Actions: Edit/Delete/Assign Rank/Access).
   - Form for POST /api/admin/users (name, username, email, password, pin, rank).
   - Update /api/admin/users/{id} (PATCH), DELETE /api/admin/users/{id}.
   - Assign rank/access via dropdowns (GET /api/admin/ranks, /api/admin/access-levels).

2. **Backend**:
   - Path: app/api/admin_routes.py
   - Endpoints (RBAC: manage_users):
     - POST /api/admin/users {name, username, email, password, pin, rank}
     - GET /api/admin/users?guild_id={guild_id}: List users.
     - PATCH /api/admin/users/{id}: Update details/rank.
     - DELETE /api/admin/users/{id}.

3. **Stubs**:
   - frontend/src/tests/users/UsersManager.test.tsx (stub).
   - tests/guild_tests.py: TestUsersCRUD.

Implementation Details:
- Chakra UI, TypeScript.
- Proxy: http://localhost:8000.
- Reference: @/docs/project/mvp_grok.markdown, @/docs/project/use_cases.markdown, @/docs/project/kilocode_output.markdown.
- No node_modules edits.

Output artifacts:
- frontend/src/components/UsersManager.tsx
- frontend/src/pages/AdminDashboard.tsx
- frontend/src/tests/users/UsersManager.test.tsx
- app/api/admin_routes.py
- tests/guild_tests.py
- scripts/test_data.py