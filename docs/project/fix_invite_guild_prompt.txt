Prompt for Kilo Code (grok-code-fast-1):

Fix 403/500 errors on guild page, invite code issues (NULL expiration as 1969, 402 on join), and add guild request approval UI for SphereConnect MVP. Align with FastAPI backend, React frontend, v21 spec (User persona, guild-only monetization). Ensure GET /api/admin/guilds returns userâ€™s guilds with manage_guilds permission. Set default expires_at=7 days in POST /api/invites. Fix join (POST /api/users/{id}/join) to reduce uses_left, create guild_request if needed. Add consistent invite creation popup (expiration, uses). Add approval UI in AdminDashboard.tsx. Fix DELETE /api/admin/invites/{code} to optionally clean pending GuildRequests. Do not modify node_modules.

1. **Backend Fixes**:
   - Path: app/api/routes.py, app/api/admin_routes.py
   - Fix POST /api/invites:
     - Set expires_at = datetime.utcnow() + timedelta(days=7), uses_left=1 (configurable in UI).
     - Generate unique invite_code (secrets.token_urlsafe(8)).
   - Fix POST /api/users/{id}/join:
     - Validate invite_code, reduce uses_left, create GuildRequest (status='pending' if guild requires approval).
     - Check member_limit; return 402 with "Guild member limit reached" if exceeded.
   - Fix GET /api/admin/guilds:
     - Require manage_guilds, filter by creator_id or approved GuildRequests.
     - Fix 500: Add try-catch for RBAC/filtering errors, return 403 with "Insufficient permissions".
   - Add PATCH /api/admin/guild_requests/{id}:
     - Update status (approved/denied); on approve, add user to guild, update current_guild_id.
   - Update DELETE /api/admin/invites/{code}: Optionally delete pending GuildRequests (configurable via query param, e.g., ?clean_requests=true).
   - Update /api/auth/register: Ensure default access_levels (view_guilds, manage_guilds, manage_users, manage_rbac).

2. **Frontend Fixes**:
   - Path: frontend/src/components/InviteManagement.tsx
   - Add popup for POST /api/invites (like Guilds tab):
     - Fields: expires_at (default 7 days), uses_left (default 1).
   - Path: frontend/src/components/GuildRequestApproval.tsx (new)
   - Features: Table (User, Guild, Status, Actions: Approve/Reject via PATCH /api/admin/guild_requests/{id}).
   - Update AdminDashboard.tsx:
     - Add Guild Requests tab (render GuildRequestApproval.tsx for Guild Leaders).
     - Fix Guilds tab to use GET /api/users/{id}/guilds (not /api/admin/guilds).

3. **Schema Fixes**:
   - Update db/schema/invites.sql:
     ```sql
     ALTER TABLE invites ALTER COLUMN expires_at SET DEFAULT (now() + interval '7 days');
     ```
   - Update db/schema/master_schema.sql.

4. **Stubs**:
   - tests/guild_tests.py: TestGuildRequestApproval, TestInviteCreation.
   - frontend/src/tests/guild/GuildRequestApproval.test.tsx (stub).

Implementation Details:
- FastAPI, SQLAlchemy, Chakra UI, TypeScript.
- Proxy: http://localhost:8000.
- Reference: @/docs/project/mvp_grok.markdown, @/docs/project/use_cases.markdown, @/docs/project/kilocode_output.markdown.
- No node_modules edits.

Output artifacts:
- app/api/routes.py
- app/api/admin_routes.py
- db/schema/invites.sql
- db/schema/master_schema.sql
- frontend/src/components/InviteManagement.tsx
- frontend/src/components/GuildRequestApproval.tsx
- frontend/src/pages/AdminDashboard.tsx
- frontend/src/tests/guild/GuildRequestApproval.test.tsx
- tests/guild_tests.py
- scripts/test_data.py